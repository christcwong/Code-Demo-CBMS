// <autogenerated>
//   This file was generated using IShiftRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Payroll;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Payroll
{
    public interface IShiftRepository : IRepository<ShiftModel>,IDisposable
    {
	    /// <summary>
        /// Insert the Shift Model into Database
        /// </summary>
        /// <param name="Shift"></param>
        #region Create
        void InsertShift(ShiftModel Shift);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active Shifts
        /// </summary>
        /// <returns></returns>
        IQueryable<ShiftModel> GetShifts();
        /// <summary>
        /// Get All Active Shifts as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<ShiftModel> GetShiftsAsList();
        /// <summary>
        /// Get Shift using its Id.
        /// </summary>
        /// <param name="ShiftId"></param>
        /// <returns></returns>
        ShiftModel GetShiftById(int ShiftId);

        /// <summary>
        /// Get Shift using its Id. (Async)
        /// </summary>
        /// <param name="ShiftId"></param>
        /// <returns></returns>
        Task<ShiftModel> GetShiftByIdAsync(int ShiftId);
        #endregion

        #region Update
        /// <summary>
        /// Update Shift Model.
        /// </summary>
        /// <param name="Shift"></param>
        void UpdateShift(ShiftModel Shift);
        /// <summary>
        /// Update Shift Model (Async)
        /// </summary>
        /// <param name="Shift"></param>
        /// <returns></returns>
        Task UpdateShiftAsync(ShiftModel Shift);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the Shift Model as Deleted in DB.
        /// </summary>
        /// <param name="ShiftId"></param>
        void DeleteShift(int ShiftId);
        /// <summary>
        /// Mark the Shift Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="ShiftId"></param>
        /// <returns></returns>
        Task DeleteShiftAsync(int ShiftId);
        #endregion
    }
}