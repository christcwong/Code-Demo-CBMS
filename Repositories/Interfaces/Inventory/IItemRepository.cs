// <autogenerated>
//   This file was generated using IItemRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Inventory;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Inventory
{
    public interface IItemRepository : IRepository<ItemModel>,IDisposable
    {
	    /// <summary>
        /// Insert the Item Model into Database
        /// </summary>
        /// <param name="Item"></param>
        #region Create
        void InsertItem(ItemModel Item);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active Items
        /// </summary>
        /// <returns></returns>
        IQueryable<ItemModel> GetItems();
        /// <summary>
        /// Get All Active Items as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<ItemModel> GetItemsAsList();
        /// <summary>
        /// Get Item using its Id.
        /// </summary>
        /// <param name="ItemId"></param>
        /// <returns></returns>
        ItemModel GetItemById(int ItemId);

        /// <summary>
        /// Get Item using its Id. (Async)
        /// </summary>
        /// <param name="ItemId"></param>
        /// <returns></returns>
        Task<ItemModel> GetItemByIdAsync(int ItemId);
        #endregion

        #region Update
        /// <summary>
        /// Update Item Model.
        /// </summary>
        /// <param name="Item"></param>
        void UpdateItem(ItemModel Item);
        /// <summary>
        /// Update Item Model (Async)
        /// </summary>
        /// <param name="Item"></param>
        /// <returns></returns>
        Task UpdateItemAsync(ItemModel Item);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the Item Model as Deleted in DB.
        /// </summary>
        /// <param name="ItemId"></param>
        void DeleteItem(int ItemId);
        /// <summary>
        /// Mark the Item Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="ItemId"></param>
        /// <returns></returns>
        Task DeleteItemAsync(int ItemId);
        #endregion
    }
}