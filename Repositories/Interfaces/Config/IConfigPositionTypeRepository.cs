// <autogenerated>
//   This file was generated using IConfigPositionTypeRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Config;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Config
{
    public interface IConfigPositionTypeRepository : IRepository<ConfigPositionTypeModel>,IDisposable
    {
	    /// <summary>
        /// Insert the ConfigPositionType Model into Database
        /// </summary>
        /// <param name="ConfigPositionType"></param>
        #region Create
        void InsertConfigPositionType(ConfigPositionTypeModel ConfigPositionType);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active ConfigPositionTypes
        /// </summary>
        /// <returns></returns>
        IQueryable<ConfigPositionTypeModel> GetConfigPositionTypes();
        /// <summary>
        /// Get All Active ConfigPositionTypes as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<ConfigPositionTypeModel> GetConfigPositionTypesAsList();
        /// <summary>
        /// Get ConfigPositionType using its Id.
        /// </summary>
        /// <param name="ConfigPositionTypeId"></param>
        /// <returns></returns>
        ConfigPositionTypeModel GetConfigPositionTypeById(int ConfigPositionTypeId);

        /// <summary>
        /// Get ConfigPositionType using its Id. (Async)
        /// </summary>
        /// <param name="ConfigPositionTypeId"></param>
        /// <returns></returns>
        Task<ConfigPositionTypeModel> GetConfigPositionTypeByIdAsync(int ConfigPositionTypeId);
        #endregion

        #region Update
        /// <summary>
        /// Update ConfigPositionType Model.
        /// </summary>
        /// <param name="ConfigPositionType"></param>
        void UpdateConfigPositionType(ConfigPositionTypeModel ConfigPositionType);
        /// <summary>
        /// Update ConfigPositionType Model (Async)
        /// </summary>
        /// <param name="ConfigPositionType"></param>
        /// <returns></returns>
        Task UpdateConfigPositionTypeAsync(ConfigPositionTypeModel ConfigPositionType);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the ConfigPositionType Model as Deleted in DB.
        /// </summary>
        /// <param name="ConfigPositionTypeId"></param>
        void DeleteConfigPositionType(int ConfigPositionTypeId);
        /// <summary>
        /// Mark the ConfigPositionType Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="ConfigPositionTypeId"></param>
        /// <returns></returns>
        Task DeleteConfigPositionTypeAsync(int ConfigPositionTypeId);
        #endregion
    }
}