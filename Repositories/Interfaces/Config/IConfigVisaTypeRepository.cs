// <autogenerated>
//   This file was generated using IConfigVisaTypeRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Config;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Config
{
    public interface IConfigVisaTypeRepository : IRepository<ConfigVisaTypeModel>,IDisposable
    {
	    /// <summary>
        /// Insert the ConfigVisaType Model into Database
        /// </summary>
        /// <param name="ConfigVisaType"></param>
        #region Create
        void InsertConfigVisaType(ConfigVisaTypeModel ConfigVisaType);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active ConfigVisaTypes
        /// </summary>
        /// <returns></returns>
        IQueryable<ConfigVisaTypeModel> GetConfigVisaTypes();
        /// <summary>
        /// Get All Active ConfigVisaTypes as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<ConfigVisaTypeModel> GetConfigVisaTypesAsList();
        /// <summary>
        /// Get ConfigVisaType using its Id.
        /// </summary>
        /// <param name="ConfigVisaTypeId"></param>
        /// <returns></returns>
        ConfigVisaTypeModel GetConfigVisaTypeById(int ConfigVisaTypeId);

        /// <summary>
        /// Get ConfigVisaType using its Id. (Async)
        /// </summary>
        /// <param name="ConfigVisaTypeId"></param>
        /// <returns></returns>
        Task<ConfigVisaTypeModel> GetConfigVisaTypeByIdAsync(int ConfigVisaTypeId);
        #endregion

        #region Update
        /// <summary>
        /// Update ConfigVisaType Model.
        /// </summary>
        /// <param name="ConfigVisaType"></param>
        void UpdateConfigVisaType(ConfigVisaTypeModel ConfigVisaType);
        /// <summary>
        /// Update ConfigVisaType Model (Async)
        /// </summary>
        /// <param name="ConfigVisaType"></param>
        /// <returns></returns>
        Task UpdateConfigVisaTypeAsync(ConfigVisaTypeModel ConfigVisaType);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the ConfigVisaType Model as Deleted in DB.
        /// </summary>
        /// <param name="ConfigVisaTypeId"></param>
        void DeleteConfigVisaType(int ConfigVisaTypeId);
        /// <summary>
        /// Mark the ConfigVisaType Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="ConfigVisaTypeId"></param>
        /// <returns></returns>
        Task DeleteConfigVisaTypeAsync(int ConfigVisaTypeId);
        #endregion
    }
}