// <autogenerated>
//   This file was generated using PayrollRecordServices.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>

using CBMS.Models.Payroll;
using CBMS.Services.Interfaces.Payroll;
using CBMS.Repositories.Interfaces.Payroll;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;
using System.Data.Entity;
using CBMS.Models;
using System.Web.Configuration;

namespace CBMS.Services.Payroll
{
    public class PayrollRecordServices : CBMSServices,IPayrollRecordServices
    {
		private string PayrollRecordRepositoryName = WebConfigurationManager.AppSettings["CBMS.REPOSITORIES.PAYROLL.PAYROLLRECORD"];
	
        private IPayrollRecordRepository _PayrollRecordRepository;
		
        public PayrollRecordServices(ModelStateDictionary modelStateDictionary)
        {
            this._modelStateDictionary = modelStateDictionary;
			this.dbContext = new CBMSDbContext();
            this._PayrollRecordRepository = (IPayrollRecordRepository)Activator.CreateInstance(Type.GetType(PayrollRecordRepositoryName), dbContext);
        }
		public PayrollRecordServices(ModelStateDictionary modelStateDictionary,CBMSDbContext dbContext)
        {
            this._modelStateDictionary = modelStateDictionary;
			this.dbContext = dbContext;
            this._PayrollRecordRepository = (IPayrollRecordRepository)Activator.CreateInstance(Type.GetType(PayrollRecordRepositoryName), dbContext);
        }
		
        public bool InsertPayrollRecord(PayrollRecordModel PayrollRecordModel)
        {
            // should have some validation here...

            // Finally put to repository
            try
            {
                _PayrollRecordRepository.Create(PayrollRecordModel);
                return true;
            }
            catch (Exception e)
            {
                _modelStateDictionary.AddModelError("Insert Exception", e.Message);
                return false;
            }
        }

		public IQueryable<PayrollRecordModel> GetPayrollRecords(){
			return this._PayrollRecordRepository.GetPayrollRecords();
		}
		
        public async Task<PayrollRecordModel> GetPayrollRecordById(int PayrollRecordId)
        {
            return await this._PayrollRecordRepository.GetPayrollRecordByIdAsync(PayrollRecordId);
        }

        public async Task UpdatePayrollRecord(PayrollRecordModel PayrollRecord)
        {
            await this._PayrollRecordRepository.UpdatePayrollRecordAsync(PayrollRecord);
        }

        public async Task DeletePayrollRecord(int PayrollRecordId)
        {
            await this._PayrollRecordRepository.DeletePayrollRecordAsync(PayrollRecordId);
        }
		
    }
}