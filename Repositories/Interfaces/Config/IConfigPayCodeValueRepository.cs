// <autogenerated>
//   This file was generated using IConfigPayCodeValueRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Config;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Config
{
    public interface IConfigPayCodeValueRepository : IRepository<ConfigPayCodeValueModel>,IDisposable
    {
	    /// <summary>
        /// Insert the ConfigPayCodeValue Model into Database
        /// </summary>
        /// <param name="ConfigPayCodeValue"></param>
        #region Create
        void InsertConfigPayCodeValue(ConfigPayCodeValueModel ConfigPayCodeValue);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active ConfigPayCodeValues
        /// </summary>
        /// <returns></returns>
        IQueryable<ConfigPayCodeValueModel> GetConfigPayCodeValues();
        /// <summary>
        /// Get All Active ConfigPayCodeValues as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<ConfigPayCodeValueModel> GetConfigPayCodeValuesAsList();
        /// <summary>
        /// Get ConfigPayCodeValue using its Id.
        /// </summary>
        /// <param name="ConfigPayCodeValueId"></param>
        /// <returns></returns>
        ConfigPayCodeValueModel GetConfigPayCodeValueById(int ConfigPayCodeValueId);

        /// <summary>
        /// Get ConfigPayCodeValue using its Id. (Async)
        /// </summary>
        /// <param name="ConfigPayCodeValueId"></param>
        /// <returns></returns>
        Task<ConfigPayCodeValueModel> GetConfigPayCodeValueByIdAsync(int ConfigPayCodeValueId);
        #endregion

        #region Update
        /// <summary>
        /// Update ConfigPayCodeValue Model.
        /// </summary>
        /// <param name="ConfigPayCodeValue"></param>
        void UpdateConfigPayCodeValue(ConfigPayCodeValueModel ConfigPayCodeValue);
        /// <summary>
        /// Update ConfigPayCodeValue Model (Async)
        /// </summary>
        /// <param name="ConfigPayCodeValue"></param>
        /// <returns></returns>
        Task UpdateConfigPayCodeValueAsync(ConfigPayCodeValueModel ConfigPayCodeValue);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the ConfigPayCodeValue Model as Deleted in DB.
        /// </summary>
        /// <param name="ConfigPayCodeValueId"></param>
        void DeleteConfigPayCodeValue(int ConfigPayCodeValueId);
        /// <summary>
        /// Mark the ConfigPayCodeValue Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="ConfigPayCodeValueId"></param>
        /// <returns></returns>
        Task DeleteConfigPayCodeValueAsync(int ConfigPayCodeValueId);
        #endregion
    }
}