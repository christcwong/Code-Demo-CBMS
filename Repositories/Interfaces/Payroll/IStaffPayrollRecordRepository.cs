// <autogenerated>
//   This file was generated using IStaffPayrollRecordRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Payroll;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Payroll
{
    public interface IStaffPayrollRecordRepository : IRepository<StaffPayrollRecordModel>,IDisposable
    {
	    /// <summary>
        /// Insert the StaffPayrollRecord Model into Database
        /// </summary>
        /// <param name="StaffPayrollRecord"></param>
        #region Create
        void InsertStaffPayrollRecord(StaffPayrollRecordModel StaffPayrollRecord);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active StaffPayrollRecords
        /// </summary>
        /// <returns></returns>
        IQueryable<StaffPayrollRecordModel> GetStaffPayrollRecords();
        /// <summary>
        /// Get All Active StaffPayrollRecords as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<StaffPayrollRecordModel> GetStaffPayrollRecordsAsList();
        /// <summary>
        /// Get StaffPayrollRecord using its Id.
        /// </summary>
        /// <param name="StaffPayrollRecordId"></param>
        /// <returns></returns>
        StaffPayrollRecordModel GetStaffPayrollRecordById(int StaffPayrollRecordId);

        /// <summary>
        /// Get StaffPayrollRecord using its Id. (Async)
        /// </summary>
        /// <param name="StaffPayrollRecordId"></param>
        /// <returns></returns>
        Task<StaffPayrollRecordModel> GetStaffPayrollRecordByIdAsync(int StaffPayrollRecordId);
        #endregion

        #region Update
        /// <summary>
        /// Update StaffPayrollRecord Model.
        /// </summary>
        /// <param name="StaffPayrollRecord"></param>
        void UpdateStaffPayrollRecord(StaffPayrollRecordModel StaffPayrollRecord);
        /// <summary>
        /// Update StaffPayrollRecord Model (Async)
        /// </summary>
        /// <param name="StaffPayrollRecord"></param>
        /// <returns></returns>
        Task UpdateStaffPayrollRecordAsync(StaffPayrollRecordModel StaffPayrollRecord);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the StaffPayrollRecord Model as Deleted in DB.
        /// </summary>
        /// <param name="StaffPayrollRecordId"></param>
        void DeleteStaffPayrollRecord(int StaffPayrollRecordId);
        /// <summary>
        /// Mark the StaffPayrollRecord Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="StaffPayrollRecordId"></param>
        /// <returns></returns>
        Task DeleteStaffPayrollRecordAsync(int StaffPayrollRecordId);
        #endregion
    }
}