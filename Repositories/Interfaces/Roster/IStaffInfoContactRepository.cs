// <autogenerated>
//   This file was generated using IStaffInfoContactRepository.tt.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
using CBMS.Models;
using CBMS.Models.Roster;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Web;

namespace CBMS.Repositories.Interfaces.Roster
{
    public interface IStaffInfoContactRepository : IRepository<StaffInfoContactModel>,IDisposable
    {
	    /// <summary>
        /// Insert the StaffInfoContact Model into Database
        /// </summary>
        /// <param name="StaffInfoContact"></param>
        #region Create
        void InsertStaffInfoContact(StaffInfoContactModel StaffInfoContact);
        #endregion

        #region Read
        /// <summary>
        /// Get All Active StaffInfoContacts
        /// </summary>
        /// <returns></returns>
        IQueryable<StaffInfoContactModel> GetStaffInfoContacts();
        /// <summary>
        /// Get All Active StaffInfoContacts as Enumerable (Forced loading)
        /// </summary>
        /// <returns></returns>
        IEnumerable<StaffInfoContactModel> GetStaffInfoContactsAsList();
        /// <summary>
        /// Get StaffInfoContact using its Id.
        /// </summary>
        /// <param name="StaffInfoContactId"></param>
        /// <returns></returns>
        StaffInfoContactModel GetStaffInfoContactById(int StaffInfoContactId);

        /// <summary>
        /// Get StaffInfoContact using its Id. (Async)
        /// </summary>
        /// <param name="StaffInfoContactId"></param>
        /// <returns></returns>
        Task<StaffInfoContactModel> GetStaffInfoContactByIdAsync(int StaffInfoContactId);
        #endregion

        #region Update
        /// <summary>
        /// Update StaffInfoContact Model.
        /// </summary>
        /// <param name="StaffInfoContact"></param>
        void UpdateStaffInfoContact(StaffInfoContactModel StaffInfoContact);
        /// <summary>
        /// Update StaffInfoContact Model (Async)
        /// </summary>
        /// <param name="StaffInfoContact"></param>
        /// <returns></returns>
        Task UpdateStaffInfoContactAsync(StaffInfoContactModel StaffInfoContact);
        #endregion

        #region Delete
        /// <summary>
        /// Mark the StaffInfoContact Model as Deleted in DB.
        /// </summary>
        /// <param name="StaffInfoContactId"></param>
        void DeleteStaffInfoContact(int StaffInfoContactId);
        /// <summary>
        /// Mark the StaffInfoContact Model as Deleted in DB. (Async)
        /// </summary>
        /// <param name="StaffInfoContactId"></param>
        /// <returns></returns>
        Task DeleteStaffInfoContactAsync(int StaffInfoContactId);
        #endregion
    }
}