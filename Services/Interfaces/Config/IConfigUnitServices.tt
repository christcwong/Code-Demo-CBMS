<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.IO" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ assembly name="System.Data.Entity.Design" #>
<#@ import namespace="System.Data.Entity.Design.PluralizationServices" #>
<#@ import namespace="System.Globalization" #>
// <autogenerated>
//   This file was generated using <#= Path.GetFileName(Host.TemplateFile) #>.
//   Any changes made manually will be lost next time the file is regenerated.
// </autogenerated>
<#
    // To debug code generation, uncomment the following line
    // Debugger.Break();

    // TODO: Place template initialization code here.
	
	var rootnamespace = "CBMS.Models.Config";
	var modelspace = rootnamespace.Split('.').Last();
	
	var modelName = "ConfigUnit";
	
	PluralizationService pluralService = PluralizationService.CreateService(new CultureInfo("en-AU"));
	var modelNames = pluralService.Pluralize(modelName);
#>

using CBMS.Models.Config;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CBMS.Services.Interfaces.<#= modelspace#>
{
    public interface IConfigUnitServices : IServices
    {
        bool InsertConfigUnit(ConfigUnitModel ConfigUnitModel);
		IQueryable<ConfigUnitModel> Get<#= modelNames#>();
        Task<ConfigUnitModel> GetConfigUnitById(int ConfigUnitId);
        Task UpdateConfigUnit(ConfigUnitModel ConfigUnit);
        Task DeleteConfigUnit(int ConfigUnitId);
    }
}
